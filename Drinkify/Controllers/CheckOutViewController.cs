// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Drinkify.Helper;
using System.Collections.Generic;
using Patxi.Models;
using Firebase.Database;
using Firebase.Storage;

namespace Drinkify.Storyboards
{
    public partial class CheckOutViewController : UIViewController, IUICollectionViewDataSource, IUICollectionViewDelegate, IUICollectionViewDelegateFlowLayout
    {
        List<Producto> productos;
        Pedido pedido;
        StorageReference rootRefStorage;

	
		public CheckOutViewController (IntPtr handle) : base (handle)
		{
            
		}

		public override void PrepareForSegue(UIStoryboardSegue segue, NSObject sender)
		{
            base.PrepareForSegue(segue, sender);
            if(segue.Identifier.Equals("segueToTracker")==true){
                var vc = segue.DestinationViewController as PatxiTrackerViewController;
                SetOrderInFireBase();
                vc.pedido = pedido;

                DataPersistanceClass.products.Clear();
                setDatos();
            }
		}

		public override void ViewDidLoad()
		{
            base.ViewDidLoad();
            productos = DataPersistanceClass.products;
            CheckOutCollectionView.Delegate = this;
            CheckOutCollectionView.DataSource = this;
            rootRefStorage = Storage.DefaultInstance.GetRootReference();


		}

		public override void ViewWillAppear(bool animated)
		{
            base.ViewWillAppear(animated);
            productos = DataPersistanceClass.products;
            CheckOutCollectionView.ReloadData();
            setDatos();

		}


        public void setDatos(){
            
            txtNombre.Text = DataPersistanceClass.persona.Name??"Usuario Name";
            txtCantidad.Text = TotalProducts().ToString();
            txtFormPago.Text = "Tarjeta con terminal";
            txtTotal.Text = $"${CalcularPrecioTotal()}";
            txtFormPago.Enabled = false;
            txtTotal.Enabled = false;
            txtNombre.Enabled = false;
            txtCantidad.Enabled = false;
        }

		public UICollectionViewCell GetCell(UICollectionView collectionView, NSIndexPath indexPath)
        {
            Producto producto = productos[int.Parse(indexPath.Item.ToString())];
            var cell = CheckOutCollectionView.DequeueReusableCell(CollectionCheckOutCell.Key, indexPath) as CollectionCheckOutCell;
            cell.txtCantidad = producto.ItemsBought;
            cell.lblNombre = producto.Name;

            double number = int.Parse(cell.txtCantidad) * double.Parse(producto.Price.ToString());
            cell.lblTotalPrice = $"${number.ToString()}";
            getImagen(producto.Id, cell.imgnView);
            cell.viewController = this;
            cell.collectionView = collectionView;

            return cell;
        }

        public nint GetItemsCount(UICollectionView collectionView, nint section)
        {
            productos = DataPersistanceClass.products;
            return productos.Count;
        }

        [Export("numberOfSectionsInCollectionView:")]
        public nint NumberOfSections(UICollectionView collectionView)
        {
            return 1;
        }

		 void SetOrderInFireBase()
		{
            
            object[] alcoholKeys = { "Fecha", "TotalProductos", "TotalPrecio", "Repartidor", "Status", "Direccion","Descripcion" };
            object[] alcoholValues = { DateTime.Now.Date.ToString(), TotalProducts().ToString(), CalcularPrecioTotal(), "Martin Franciso Jimenez Sanchez", 0, "Cima del Sol 153, Lomas del Sol,37150, Leon GTO",ProductsDesc() };
            var qs2 = NSDictionary.FromObjectsAndKeys(alcoholValues, alcoholKeys, alcoholKeys.Length);
            DatabaseReference rootNode = Database.DefaultInstance.GetRootReference();
            DatabaseReference productosNode = rootNode.GetChild("0").GetChild("Pedidos").GetChild(DataPersistanceClass.persona.Id);
            DatabaseReference productoNode = productosNode.GetChildByAutoId();


            pedido = new Pedido();
            pedido.Id = productoNode.Key;
            pedido.Repartidor = "Martin Franciso Jimenez Sanchez";
            pedido.IdUser = DataPersistanceClass.persona.Id;
            pedido.Date = DateTime.Now.ToString();
            pedido.Address = "Cima del Sol 153, Lomas del Sol,37150, Leon GTO";
            pedido.IdStatus = 0;
            pedido.TotalPrice = double.Parse(CalcularPrecioTotal());
            pedido.TotalProducts = TotalProducts();
            pedido.Products = productos;
            productoNode.SetValue<NSDictionary>(qs2);

		}



        public string CalcularPrecioTotal(){
            double total=0.0;

            foreach (Producto item in productos)
            {
                var precio = item.Price;


                    var cant = item.ItemsBought;
                    var asd = precio * int.Parse(cant);
                    total += asd;
                


            }

            return total.ToString();
        }

        int TotalProducts(){
            int total = 0;
            foreach (Producto item in productos)
            {
                if(!string.IsNullOrWhiteSpace(item.ItemsBought))
                    total += int.Parse(item.ItemsBought);
                
                //TODO: validar numero muy grandes
            }
            return total;
        }

        string ProductsDesc()
        {
            string desc = "";
            foreach (Producto item in productos)
            {
                desc += $",{item.Name}";
            }
            return desc;
        }

        void getImagen(string id, UIImageView view)
        {
            StorageReference profileImageRef = rootRefStorage.GetChild($"products/{id}.jpg");
            UIImage img = new UIImage();
            var ss = profileImageRef.GetData(1 * 1024 * 1024, (data, error) => {
                try
                {
                    view.Image = UIImage.LoadFromData(data);
                }
                catch (ArgumentNullException ex)
                {
                    //no tiene imagen
                    StorageReference genericImageRef = rootRefStorage.GetChild($"generic.jpg");
                    genericImageRef.GetData(1 * 1024 * 1024, (dataa, errorr) => {

                        view.Image = UIImage.LoadFromData(dataa);
                    });

                }

            });
                
        }
	}
}
