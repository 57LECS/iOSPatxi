// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using CoreGraphics;
using UIKit;
using Patxi.Models;
using Drinkify.Helper;

namespace Drinkify.Storyboards
{
    public partial class TableCatalogViewCell : UITableViewCell
	{
		public TableCatalogViewCell (IntPtr handle) : base (handle)
		{
            
		}

        public static readonly NSString Key = new NSString(nameof(TableCatalogViewCell));
        public Producto producto;
        public UIViewController viewController;
        public Action btnFunc;
        public bool hideInputs = false;

        public UIImage ProductImage
        {
            get => imgProd.Image;
            set => imgProd.Image = value;
        }

        public string NameText
        {
            get => txtNombre.Text;
            set => txtNombre.Text = value;
        }

        public string QuantityText
        {
            get => txtCant.Text;
            set => txtCant.Text = value;
        }

        public string DescriptionText
        {
            get => txtDesc.Text;
            set => txtDesc.Text = value;
        }

        public string PriceText
        {
            get => txtPrecio.Text;
            set => txtPrecio.Text = value;
        }

        public string boughtNumber
        {
            get => txtNumber.Text;
            set => txtNumber.Text = value;
        }


        public override void LayoutSubviews()
        {
            base.LayoutSubviews();

            txtNumber.Hidden = hideInputs;
            btnAgregarProducto.Hidden = hideInputs;
            btnAgregarProducto.TouchUpInside += delegate (object sender, EventArgs e)
            {
                UIAlertController alertController;
                if (string.IsNullOrEmpty(boughtNumber)){
                    alertController = UIAlertController.Create("Cantidad", $"Debes de ingresar una cantidad", UIAlertControllerStyle.Alert);
                    alertController.AddAction(UIAlertAction.Create("Ok", UIAlertActionStyle.Cancel, null));
                }
                else{
                    alertController = UIAlertController.Create("Agregar al carrito", $"Vas a agregrar {boughtNumber} de {NameText} al carrito", UIAlertControllerStyle.Alert);
                    alertController.AddAction(UIAlertAction.Create("Ok", UIAlertActionStyle.Default, (UIAlertAction obj) => {
                        producto.ItemsBought = boughtNumber;
                        DataPersistanceClass.products.Add(producto);
                        boughtNumber = "";

                    }));
                    alertController.AddAction(UIAlertAction.Create("Cancelar", UIAlertActionStyle.Cancel, null));
                }
                    



                viewController.PresentViewController(alertController, true, null);
                //UIApplication.SharedApplication.KeyWindow?.RootViewController.PresentViewController(alertController, true, null);
            };



        }

        //public void agregarMetodobtn(Action func) => btnAgregarProducto.TouchUpInside += func;

  //      partial void btnAgregar(NSObject sender)
		//{
            //UIAlertController.Create("Agregado", "Se agrego el obejto", UIAlertControllerStyle.Alert);
            //TODO: MOstrar alerta;

            //var alertController = UIAlertController.Create("Agregar al carrito", $"Vas a agregrar {producto.ItemsBought}", UIAlertControllerStyle.Alert);
            //alertController.AddAction(UIAlertAction.Create("Ok", UIAlertActionStyle.Default,(UIAlertAction obj) => {
            //    producto.ItemsBought = boughtNumber;
            //    DataPersistanceClass.products.Add(producto);

            //}));
            //alertController.AddAction(UIAlertAction.Create("Cancelar", UIAlertActionStyle.Cancel, null));

            //UIApplication.SharedApplication.KeyWindow?.RootViewController.PresentViewController(alertController, true, null);
		//}
        

        public NSIndexPath IndexPath
        {
            get;
            set;
        }




	}


}